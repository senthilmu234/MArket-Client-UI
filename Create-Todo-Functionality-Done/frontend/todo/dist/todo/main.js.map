{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/list-todos/list-todos.component.css","webpack:///./src/app/list-todos/list-todos.component.html","webpack:///./src/app/list-todos/list-todos.component.ts","webpack:///./src/app/listtodosapproved/listtodosapproved.component.css","webpack:///./src/app/listtodosapproved/listtodosapproved.component.html","webpack:///./src/app/listtodosapproved/listtodosapproved.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/service/data/todo-data.service.ts","webpack:///./src/app/service/hardcoded-authentication.service.ts","webpack:///./src/app/service/route-guard.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACY;AACN;AACW;AACsB;AAC9B;AACtB;AACc;AACE;AACA;AAEzD,WAAW;AACX,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAG;IACxC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,2EAAgB,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAC;IACtF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,mFAAkB,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAChF,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,yGAA0B,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC,EAAE;IAGrG,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,qEAAc,EAAE;CAC1C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7B7B,+DAA+D,+H;;;;;;;;;;;ACA/D,8P;;;;;;;;;;;;;;;;;;;;;ACA0C;AAQ1C;IANA;QAOE,UAAK,GAAG,MAAM,CAAC;QACf,YAAO,GAAG,iCAAiC,CAAC;IAC9C,CAAC;IAHY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAIrB,CAAC;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACE;AACjB;AACI;AAEW;AACT;AACgB;AACN;AACA;AACc;AACjB;AACM;AACA;AACN;AACuC;AAwB7F;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,qEAAc;gBACd,qEAAc;gBACd,mFAAkB;gBAClB,mEAAa;gBACb,yEAAe;gBACf,yEAAe;gBACf,mEAAa;gBACb,0GAA0B;aAC3B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvCtB,+DAA+D,2I;;;;;;;;;;;ACA/D,oBAAoB,cAAc,C;;;;;;;;;;;;;;;;;;;;;;;;ACAgB;AAOlD;IAIE;QAFA,iBAAY,GAAG,gDAAgD;IAE/C,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAPU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAS1B;IAAD,qBAAC;CAAA;AAT0B;;;;;;;;;;;;ACP3B,2BAA2B,yBAAyB,gBAAgB,iBAAiB,mBAAmB,gCAAgC,GAAG,6CAA6C,md;;;;;;;;;;;ACAxL,qL;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,qhBAAqhB,8EAA8E,eAAe,6BAA6B,iBAAiB,6BAA6B,iBAAiB,6BAA6B,gBAAgB,6BAA6B,eAAe,6BAA6B,mBAAmB,6BAA6B,cAAc,6BAA6B,uBAAuB,6BAA6B,sCAAsC,6BAA6B,gBAAgB,6BAA6B,kBAAkB,kSAAkS,qK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjzC;AACpB;AACT;AAEzC;IACE,cACS,EAAU,EACV,WAAmB,EACnB,SAAkB,EAClB,YAAkB;QAHlB,OAAE,GAAF,EAAE,CAAQ;QACV,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAS;QAClB,iBAAY,GAAZ,YAAY,CAAM;IAG3B,CAAC;IACH,WAAC;AAAD,CAAC;;AAOD;IAME,MAAM;IACN,sDAAsD;IACtD,mEAAmE;IACnE,kDAAkD;IAClD,iCAAiC;IACjC,mCAAmC;IACnC,6CAA6C;IAC7C,IAAI;IAEJ,WAAW;IACX,cAAc;IACd,oCAAoC;IACpC,IAAI;IAEJ,4BACU,WAA2B,EAC3B,MAAe;QADf,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAS;IACrB,CAAC;IAEL,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,yCAAY,GAAZ;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,CACF;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,EAAE;QAAb,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,iBAAe,EAAI,CAAE;QACjC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,SAAS,CAChD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,wDAAwD;YACxD,KAAI,CAAC,OAAO,GAAG,mCAAmC,CAAC;YACnD,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,YAAU,EAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;IA7DU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAsBsB,+EAAe;YAClB,sDAAM;OAtBd,kBAAkB,CA8D9B;IAAD,yBAAC;CAAA;AA9D8B;;;;;;;;;;;;ACpB/B,+DAA+D,2K;;;;;;;;;;;ACA/D,moBAAmoB,8GAA8G,iBAAiB,6BAA6B,iBAAiB,6BAA6B,gBAAgB,6BAA6B,eAAe,6BAA6B,mBAAmB,6BAA6B,cAAc,6BAA6B,uBAAuB,6BAA6B,sCAAsC,6BAA6B,gBAAgB,6BAA6B,kBAAkB,wEAAwE,kL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCzrC;AACpB;AACT;AAEzC;IACE,cACS,EAAU,EACV,WAAmB,EACnB,SAAkB,EAClB,YAAkB;QAHlB,OAAE,GAAF,EAAE,CAAQ;QACV,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAS;QAClB,iBAAY,GAAZ,YAAY,CAAM;IAG3B,CAAC;IACH,WAAC;AAAD,CAAC;;AAMD;IAME,oCACU,WAA2B,EAC3B,MAAe;QADf,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAS;IACrB,CAAC;IAEL,6CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,iDAAY,GAAZ;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,CACF;IACH,CAAC;IAtBU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAQsB,+EAAe;YAClB,sDAAM;OARd,0BAA0B,CAiCtC;IAAD,iCAAC;CAAA;AAjCsC;;;;;;;;;;;;ACpBvC,+DAA+D,2I;;;;;;;;;;;ACA/D,4HAA4H,cAAc,oNAAoN,UAAU,qG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzQ;AAC7C;AACT;AAOzC;IAOE,QAAQ;IACR,sBAAsB;IACtB,sBAAsB;IACtB,wBAAoB,MAAc,EACxB,8BAA8D;QADpD,WAAM,GAAN,MAAM,CAAQ;QACxB,mCAA8B,GAA9B,8BAA8B,CAAgC;QATxE,aAAQ,GAAG,OAAO;QAClB,aAAQ,GAAG,EAAE;QACb,iBAAY,GAAG,qBAAqB;QACpC,iBAAY,GAAG,KAAK;IAMwD,CAAC;IAE7E,iCAAQ,GAAR;IACA,CAAC;IACD,oCAAW,GAAX;QACE,8BAA8B;QAC9B,kEAAkE;QAClE,IAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACjF,0BAA0B;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,KAAK;SAC1B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI;SACzB;IACH,CAAC;IAzBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAW4B,sDAAM;YACQ,wGAA8B;OAX7D,cAAc,CA0B1B;IAAD,qBAAC;CAAA;AA1B0B;;;;;;;;;;;;ACT3B,+DAA+D,2I;;;;;;;;;;;ACA/D,yH;;;;;;;;;;;;;;;;;;;;;;;;;ACA+F;AAC7C;AAOlD;IAEE,yBACU,8BAA8D;QAA9D,mCAA8B,GAA9B,8BAA8B,CAAgC;IACpE,CAAC;IAEL,kCAAQ,GAAR;QACE,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE,CAAC;IAC/C,CAAC;IARU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAI0C,wGAA8B;OAH7D,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;;;;;;;;;;;;ACR5B,+DAA+D,uI;;;;;;;;;;;ACA/D,i4B;;;;;;;;;;;;;;;;;;;;;;;;;ACA+F;AAC7C;AAOlD;IACE,kCAAkC;IAElC,uBAAoB,8BACc;QADd,mCAA8B,GAA9B,8BAA8B,CAChB;IAAI,CAAC;IAEvC,gCAAQ,GAAR;QACE,6EAA6E;IAC/E,CAAC;IARU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKI,wGAA8B;OAJvB,aAAa,CAUzB;IAAD,oBAAC;CAAA;AAVyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACRwB;AACP;AAM3C;IAEE,yBACU,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IACrB,CAAC;IAEL,0CAAgB,GAAhB,UAAiB,QAAQ;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,iCAA+B,QAAQ,WAAQ,CAAC,CAAC;QAC9E,iDAAiD;IACnD,CAAC;IAED,oCAAU,GAAV,UAAW,QAAQ,EAAE,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iCAA+B,QAAQ,eAAU,EAAI,CAAC,CAAC;IACjF,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAQ,EAAE,EAAE;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,iCAA+B,QAAQ,eAAU,EAAI,CAAC,CAAC;IACpF,CAAC;IAED,oCAAU,GAAV,UAAW,QAAQ,EAAE,EAAE,EAAE,IAAI;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CACR,iCAA+B,QAAQ,eAAU,EAAI,EACnD,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,oCAAU,GAAV,UAAW,QAAQ,EAAE,IAAI;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACT,iCAA+B,QAAQ,WAAQ,EAC7C,IAAI,CAAC,CAAC;IACtB,CAAC;IA7BU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIe,+DAAU;OAHd,eAAe,CA+B3B;IAAD,sBAAC;CAAA;AA/B2B;;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AAK3C;IAEE;IAAgB,CAAC;IAEjB,qDAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAC7B,iDAAiD;QACjD,IAAG,QAAQ,KAAG,OAAO,IAAI,QAAQ,KAAK,OAAO,EAAE;YAC7C,cAAc,CAAC,OAAO,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;YACtD,gDAAgD;YAChD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,uDAAc,GAAd;QACE,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC;QACtD,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;IACzB,CAAC;IAED,+CAAM,GAAN;QACE,cAAc,CAAC,UAAU,CAAC,mBAAmB,CAAC;IAChD,CAAC;IArBU,8BAA8B;QAH1C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,8BAA8B,CAuB1C;IAAD,qCAAC;CAAA;AAvB0C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLyC;AACzC;AACwD;AAKnG;IAEE,2BACU,8BAA8D,EAC9D,MAAc;QADd,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAED,uCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QAEnE,IAAI,IAAI,CAAC,8BAA8B,CAAC,cAAc,EAAE;YACtD,OAAO,IAAI,CAAC;QAEd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAEhC,OAAO,KAAK,CAAC;IACf,CAAC;IAhBU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0C,gGAA8B;YACtD,sDAAM;OAJb,iBAAiB,CAiB7B;IAAD,wBAAC;CAAA;AAjB6B;;;;;;;;;;;;ACP9B,+DAA+D,uI;;;;;;;;;;;ACA/D,kgF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACa;AACpB;AACQ;AAO1D;IAKE,uBACU,WAA4B,EAC5B,KAAqB,EACrB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAiB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,gCAAQ,GAAR;QAAA,iBAYC;QAVC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,IAAI,qEAAI,CAAC,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAElD,IAAG,IAAI,CAAC,EAAE,IAAE,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC;iBAChD,SAAS,CACR,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CACzB;SACN;IACH,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CACF;SACN;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;iBACzD,SAAS,CACR,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CACF;SACN;IACH,CAAC;IA3CU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAOuB,+EAAe;YACrB,8DAAc;YACb,sDAAM;OARb,aAAa,CA6CzB;IAAD,oBAAC;CAAA;AA7CyB;;;;;;;;;;;;ACV1B,+DAA+D,+I;;;;;;;;;;;ACA/D,kFAAkF,MAAM,sQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACClB;AACtE,oDAAoD;AACX;AAGzC;IACE,cACS,EAAU,EACV,WAAmB,EACnB,SAAkB,EAClB,YAAkB;QAHlB,OAAE,GAAF,EAAE,CAAQ;QACV,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAS;QAClB,iBAAY,GAAZ,YAAY,CAAM;IAG3B,CAAC;IACH,WAAC;AAAD,CAAC;;AAEiD,qBAAoB;AAStE;IAKI,0BACQ,WAA2B,EAC3B,MAAe;QADf,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAS;IACrB,CAAC;IAEL,mCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,CACF;IACH,CAAC;IAED,qCAAU,GAAV,UAAW,EAAE;QAAb,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,iBAAe,EAAI,CAAE;QACjC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,SAAS,CAChD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,wDAAwD;YACxD,KAAI,CAAC,OAAO,GAAG,mCAAmC,CAAC;YACnD,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAED,qCAAU,GAAV,UAAW,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,YAAU,EAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IA1CU,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;QAEF,sEAAsE;;yCAO9C,+EAAe;YAClB,sDAAM;OAPd,gBAAgB,CA2C5B;IAAD,uBAAC;CAAA;AA3C4B;AA6C7B;IAAA;IAEA,CAAC;IAAD,aAAC;AAAD,CAAC;;AAED;IAAA;IAEA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7ED;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { TodoComponent } from './todo/todo.component';\nimport { RouteGuardService } from './service/route-guard.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { ListtodosapprovedComponent } from './listtodosapproved/listtodosapproved.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\n\n// welcome \nconst routes: Routes = [\n  { path: '', component: LoginComponent  },//canActivate, RouteGuardService\n  { path: 'login', component: LoginComponent },\n  { path: 'welcome/:name', component: WelcomeComponent, canActivate:[RouteGuardService]},\n  { path: 'todos', component: ListTodosComponent, canActivate:[RouteGuardService] },\n  { path: 'logout', component: LogoutComponent, canActivate:[RouteGuardService] },\n  { path: 'todos/:id', component: TodoComponent, canActivate:[RouteGuardService] },\n  { path: 'todosapproved/:id', component: ListtodosapprovedComponent, canActivate:[RouteGuardService] },\n  \n\n  { path: '**', component: ErrorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<app-welcome></app-welcome>-->\\n\\n<!-- <app-login></app-login> -->\\n<!--\\n<div>Component Content</div>-->\\n\\n<app-menu></app-menu>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  //template: '<h1>{{title}}<h1>',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo';\n  message = 'Welcome to MarketRisk Dashboard';\n}","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ListtodosapprovedComponent } from './listtodosapproved/listtodosapproved.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    LoginComponent,\n    ErrorComponent,\n    ListTodosComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    TodoComponent,\n    ListtodosapprovedComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"{{errorMessage}}\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = 'An Error Occured! Contact Support at *** - ***'\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer {\\n    position: absolute;\\n    bottom: 0;\\n    width:100%;\\n    height: 40px;\\n    background-color: #222222;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixXQUFXO0lBQ1gsYUFBYTtJQUNiLDBCQUEwQjtDQUM3QiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjtcbn0iXX0= */\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n        <span class=\\\"text-muted\\\">All Rights Reserved 2021</span>\\n    </div>\\n\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtdG9kb3MvbGlzdC10b2Rvcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2> Scenario Detail </h2>\\n\\n<div class=\\\"container\\\">\\n\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Submitted by</th>\\n        <th>Asset Class</th>\\n        <th>Risk Factor</th>\\n        <th>Status New</th>\\n        <th>Scenario</th>\\n        <th>ScenarioName</th>\\n        <th>Segment</th>\\n        <th>Scenario Severity</th>\\n        <th>Scenario Date</th>\\n        <th>Threshold</th>\\n        <th>Comments</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <!--   for (Todo todo: todos) {  -->\\n              <tr *ngFor=\\\"let todo of todos\\\">\\n                <td>{{todo.username}}</td>\\n                <td>{{todo.assetClass}}</td>\\n                <td>{{todo.riskFactor}}</td>\\n                <td>{{todo.statusNew}}</td>\\n                <td>{{todo.scenario}}</td>\\n                <td>{{todo.scenarioName}}</td>\\n                <td>{{todo.segment}}</td>\\n                <td>{{todo.scenarioSeverity}}</td>\\n                <td>{{todo.scenarioDate | date | uppercase}}</td>\\n                <td>{{todo.threshold}}</td>\\n                <td>{{todo.description}}</td>\\n                <td><button (click)=\\\"updateTodo(todo.id)\\\" class=\\\"btn btn-success\\\">Approve</button></td>\\n                <td><button (click)=\\\"deleteTodo(todo.id)\\\" class=\\\"btn btn-warning\\\">Reject</button></td>\\n                \\n              </tr>\\n             \\n      <!-- } -->\\n    </tbody>\\n    </table>\\n    \\n  <div class=\\\"row\\\">\\n      <button (click)=\\\"addAll()\\\" class=\\\"btn btn-success\\\">Approve All</button>\\n  </div>\\n\\n</div>\"","import { TodoDataService } from './../service/data/todo-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public statusNew: boolean,\n    public scenarioDate: Date\n  ){\n\n  }\n}\n\n@Component({\n  selector: 'app-list-todos',\n  templateUrl: './list-todos.component.html',\n  styleUrls: ['./list-todos.component.css']\n})\nexport class ListTodosComponent implements OnInit {\n\n  todos: Todo[]\n\n  message: string\n\n  // = [\n  //   new Todo(1, 'Learn to Dance', false, new Date()),\n  //   new Todo(2, 'Become an Expert at Angular', false, new Date()),\n  //   new Todo(3, 'Visit India', false, new Date())\n  //   // {id : 1, description : },\n  //   // {id : 2, description : ''},\n  //   // {id : 3, description : 'Visit India'}\n  // ]\n\n  // todo = {\n  //     id : 1,\n  //     description: 'Learn to Dance'\n  // }\n\n  constructor(\n    private todoService:TodoDataService,\n    private router : Router\n  ) { }\n\n  ngOnInit() {\n    this.refreshTodos();\n  }\n\n  refreshTodos(){\n    this.todoService.retrieveAllTodos('guest').subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    console.log(`delete todo ${id}` )\n    this.todoService.deleteTodo('guest', id).subscribe (\n      response => {\n        console.log(response);\n        //this.message = `Delete of Scenario ${id} Successful!`;\n        this.message = `Delete of Scenario is Successful!`;\n        this.refreshTodos();\n      }\n    )\n  }\n\n  updateTodo(id) {\n    console.log(`update ${id}`)\n    this.router.navigate(['todosapproved',id])\n  }\n\n  addTodo() {\n    this.router.navigate(['todos',-1])\n  }\n\n  addAll() {\n    this.router.navigate(['todosapproved'])\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3R0b2Rvc2FwcHJvdmVkL2xpc3R0b2Rvc2FwcHJvdmVkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<h2> Approved Scenario Detail </h2>\\n\\n<div class=\\\"alert alert-success\\\">A new Scenario has been approved and created in System</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Submitted by</th>\\n        <th>Asset Class</th>\\n        <th>Risk Factor</th>\\n        <th>Status New</th>\\n        <th>Scenario</th>\\n        <th>ScenarioName</th>\\n        <th>Segment</th>\\n        <th>Scenario Severity</th>\\n        <th>Scenario Date</th>\\n        <th>Threshold</th>\\n        <th>Comments</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <!--   for (Todo todo: todos) {  -->\\n              <tr *ngFor=\\\"let todo of todos\\\">\\n                <td>guest</td>\\n                <td>{{todo.assetClass}}</td>\\n                <td>{{todo.riskFactor}}</td>\\n                <td>{{todo.statusNew}}</td>\\n                <td>{{todo.scenario}}</td>\\n                <td>{{todo.scenarioName}}</td>\\n                <td>{{todo.segment}}</td>\\n                <td>{{todo.scenarioSeverity}}</td>\\n                <td>{{todo.scenarioDate | date | uppercase}}</td>\\n                <td>{{todo.threshold}}</td>\\n                <td>{{todo.description}}</td>\\n               \\n              </tr>\\n             \\n      <!-- } -->\\n    </tbody>\\n    </table>\\n    \\n  <div class=\\\"row\\\">\\n      <button (click)=\\\"addTodo()\\\" class=\\\"btn btn-success\\\">Home: Create Scenario</button>\\n  </div>\\n\\n</div>\\n\"","\nimport { TodoDataService } from './../service/data/todo-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public statusNew: boolean,\n    public scenarioDate: Date\n  ){\n\n  }\n}\n@Component({\n  selector: 'app-listtodosapproved',\n  templateUrl: './listtodosapproved.component.html',\n  styleUrls: ['./listtodosapproved.component.css']\n})\nexport class ListtodosapprovedComponent implements OnInit {\n\n  todos: Todo[]\n\n  message: string\n\n  constructor(\n    private todoService:TodoDataService,\n    private router : Router\n  ) { }\n\n  ngOnInit() {\n    this.refreshTodos();\n  }\n\n  refreshTodos(){\n    this.todoService.retrieveAllTodos('guest').subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  /**updateTodo(id) {\n    console.log(`update ${id}`)\n    this.router.navigate(['todosapproved',id])\n  }\n\n  addTodo() {\n    this.router.navigate(['todos',-1])\n  }**/\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<H1>Login!</H1>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-warning\\\" *ngIf='invalidLogin'>{{errorMessage}}</div>\\n\\n  <div>\\n    User Name : <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\">\\n    Password  : <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\n\\n    <!-- User Name : {{username}} -->\\n\\n    <button (click)=handleLogin() class=\\\"btn btn-success\\\">Login</button>\\n  </div>\\n</div>\"","import { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = 'guest'\n  password = ''\n  errorMessage = 'Invalid Credentials'\n  invalidLogin = false\n\n  //Router\n  //Angular.giveMeRouter\n  //Dependency Injection\n  constructor(private router: Router,\n    private hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n  }\n  handleLogin() {\n    // console.log(this.username);\n    //if(this.username===\"guest\" && this.password === 'dummy') {\n    if(this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n      //Redirect to Welcome Page\n      this.router.navigate(['welcome', this.username])\n      this.invalidLogin = false\n    } else {\n      this.invalidLogin = true\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<H1>You are logged out</H1>\\n<div class=\\\"container\\\">\\n  Thank You For Using Our Application.\\n</div>\"","import { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private hardcodedAuthenticationService: HardcodedAuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.hardcodedAuthenticationService.logout();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n        <div><a href=\\\"\\\" class=\\\"navbar-brand\\\">\\n            MarketRisk</a></div>\\n\\n        <ul class=\\\"navbar-nav\\\">\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/welcome/guest\\\" class=\\\"nav-link\\\">Home</a></li>\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/todos\\\" class=\\\"nav-link\\\">Scenario</a></li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\n                <li><a *ngIf=\\\"!hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a></li>\\n                <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">Logout</a></li>\\n        </ul>\\n    </nav>\\n</header>\"","import { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  //isUserLoggedIn: boolean = false;\n\n  constructor(private hardcodedAuthenticationService \n    : HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    //this.isUserLoggedIn = this.hardcodedAuthenticationService.isUserLoggedIn();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Todo } from '../../list-todos/list-todos.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoDataService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  retrieveAllTodos(username) {\n    return this.http.get<Todo[]>(`http://localhost:8080/users/${username}/todos`);\n    //console.log(\"Execute Hello World Bean Service\")\n  }\n\n  deleteTodo(username, id){\n    return this.http.delete(`http://localhost:8080/users/${username}/todos/${id}`);\n  }\n\n  retrieveTodo(username, id){\n    return this.http.get<Todo>(`http://localhost:8080/users/${username}/todos/${id}`);\n  }\n\n  updateTodo(username, id, todo){\n    return this.http.put(\n                `http://localhost:8080/users/${username}/todos/${id}`\n                , todo);\n  }\n\n  createTodo(username, todo){\n    return this.http.post(\n                `http://localhost:8080/users/${username}/todos`\n                , todo);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodedAuthenticationService {\n\n  constructor() { }\n\n  authenticate(username, password) {\n    //console.log('before ' + this.isUserLoggedIn());\n    if(username===\"guest\" && password === 'dummy') {\n      sessionStorage.setItem('authenticaterUser', username);\n      //console.log('after ' + this.isUserLoggedIn());\n      return true;\n    }\n    return false;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticaterUser')\n    return !(user === null)\n  }\n\n  logout(){\n    sessionStorage.removeItem('authenticaterUser')\n  }\n\n}\n","import { HardcodedAuthenticationService } from './hardcoded-authentication.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(\n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\n    private router: Router) {\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    if (this.hardcodedAuthenticationService.isUserLoggedIn())\n      return true;\n\n    this.router.navigate(['login']);\n\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n\\n  <H2>Create Scenario</H2>\\n\\n  <div class=\\\"form-row\\\">\\n    \\n  <fieldset class=\\\"form-group\\\">\\n    <label>Asset Class</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.assetClass\\\" class=\\\"form-control\\\" name=\\\"Asset Class\\\" required=\\\"required\\\">\\n  </fieldset>\\n  \\n  <fieldset class=\\\"form-group\\\">\\n    <label>Risk Factor</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.riskFactor\\\" class=\\\"form-control\\\" name=\\\"Risk Factor\\\" required=\\\"required\\\">\\n  </fieldset>\\n\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Status New</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.statusNew\\\" class=\\\"form-control\\\" name=\\\"Status New\\\" required=\\\"required\\\">\\n  </fieldset>\\n\\n</div>\\n   \\n  <div class=\\\"form-row\\\">\\n\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Scenario</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.scenario\\\" class=\\\"form-control\\\" name=\\\"Scenario\\\" required=\\\"required\\\">\\n  </fieldset>\\n\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Scenario Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.scenarioName\\\" class=\\\"form-control\\\" name=\\\"Scenario Name\\\" required=\\\"required\\\">\\n  </fieldset>\\n  \\n   \\n  <fieldset class=\\\"form-group\\\">\\n    <label>Segment</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.segment\\\" class=\\\"form-control\\\" name=\\\"Segment\\\" required=\\\"required\\\">\\n  </fieldset>\\n  \\n </div>\\n <div class=\\\"form-row\\\">\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Scenario Severity</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.scenarioSeverity\\\" class=\\\"form-control\\\" name=\\\"Sensitivity\\\" required=\\\"required\\\">\\n  </fieldset>\\n\\n  <fieldset class=\\\"form-group\\\">\\n      <label>Scenario Date</label>\\n      <input type=\\\"date\\\" \\n      [ngModel]=\\\"todo.targetDate | date:'yyyy-MM-dd' \\\"\\n      (ngModelChange)=\\\"todo.scenarioDate = $event\\\"\\n      class=\\\"form-control\\\" name=\\\"scenarioDate\\\" required=\\\"required\\\">\\n  </fieldset>\\n  \\n\\n  \\n  <fieldset class=\\\"form-group\\\">\\n    <label>Threshold to be set</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"todo.threshold\\\" class=\\\"form-control\\\" name=\\\"Threshold\\\" required=\\\"required\\\">\\n  </fieldset>\\n</div>\\n\\n<div class=\\\"form-row\\\">\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Commentary why and what was the cause</label>\\n    <input type=\\\"text area\\\" [(ngModel)]=\\\"todo.description\\\" class=\\\"form-control\\\" name=\\\"Description\\\" required=\\\"required\\\">\\n  </fieldset>\\n  </div>\\n  \\n  <button class=\\\"btn btn-success\\\" (click)=\\\"saveTodo()\\\">Create</button>\\n\\n</div>\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { TodoDataService } from './../service/data/todo-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Todo } from '../list-todos/list-todos.component';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  id:number\n  todo: Todo\n\n  constructor(\n    private todoService: TodoDataService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    \n    this.id = this.route.snapshot.params['id'];\n    \n    this.todo = new Todo(this.id,'',false,new Date());\n    \n    if(this.id!=-1) {\n      this.todoService.retrieveTodo('guest', this.id)\n          .subscribe (\n            data => this.todo = data\n          )\n    }\n  }\n\n  saveTodo() {\n    if(this.id === -1) {\n      this.todoService.createTodo('guest', this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todos'])\n            }\n          )\n    } else {\n      this.todoService.updateTodo('guest', this.id, this.todo)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.router.navigate(['todos'])\n            }\n          )\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<H1>Welcome!</H1>\\n\\n<!--<div class=\\\"container\\\">\\n  Welcome {{name}}. You can manage your action <a routerLink=\\\"/todos\\\">Create Scenario</a>\\n</div>-->\\n\\n\\n    \\n<div class=\\\"container\\\">\\n  You can manage your action to create scenario\\n  <button (click)=\\\"addTodo()\\\" class=\\\"btn btn-success\\\">Add Scenario</button>\\n</div>\\n\"","import { WelcomeDataService } from './../service/data/welcome-data.service';\nimport { TodoDataService } from './../service/data/todo-data.service';\n//import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public statusNew: boolean,\n    public scenarioDate: Date\n  ){\n\n  }\n}\n\nimport { Component, OnInit } from '@angular/core';//'./app.component';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\n\n//public class SpringBootFirstWebApplication implements SomeInterface{\nexport class WelcomeComponent implements OnInit {\n  todos: Todo[]\n\n  message: string\n\n    constructor(\n    private todoService:TodoDataService,\n    private router : Router\n  ) { }\n\n  ngOnInit() {\n    this.refreshTodos();\n  }\n\n  refreshTodos(){\n    this.todoService.retrieveAllTodos('guest').subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    console.log(`delete todo ${id}` )\n    this.todoService.deleteTodo('guest', id).subscribe (\n      response => {\n        console.log(response);\n        //this.message = `Delete of Scenario ${id} Successful!`;\n        this.message = `Delete of Scenario is Successful!`;\n        this.refreshTodos();\n      }\n    )\n  }\n\n  updateTodo(id) {\n    console.log(`update ${id}`)\n    this.router.navigate(['todos',id])\n  }\n\n  addTodo() {\n    this.router.navigate(['todos',-1])\n  }\n}\n\nexport class Class1 {\n\n}\n\nexport class Class2 {\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}